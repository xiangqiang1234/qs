<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.building.ipi.web.system.role.dao.RoleMapper">
    <resultMap id="BaseResultMap" type="com.building.ipi.web.system.role.model.Role">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="role_sign" property="roleSign" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, role_name, role_sign, description
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.building.ipi.web.system.role.model.RoleExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sys_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_role
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.building.ipi.web.system.role.model.RoleExample">
        delete from sys_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.building.ipi.web.system.role.model.Role">
    insert into sys_role (id, role_name, role_sign,
      description)
    values (#{id,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{roleSign,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.building.ipi.web.system.role.model.Role">
        insert into sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleSign != null">
                role_sign,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleSign != null">
                #{roleSign,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.building.ipi.web.system.role.model.RoleExample"
            resultType="java.lang.Integer">
        select count(*) from sys_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update sys_role
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.roleName != null">
                role_name = #{record.roleName,jdbcType=VARCHAR},
            </if>
            <if test="record.roleSign != null">
                role_sign = #{record.roleSign,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update sys_role
        set id = #{record.id,jdbcType=VARCHAR},
        role_name = #{record.roleName,jdbcType=VARCHAR},
        role_sign = #{record.roleSign,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.building.ipi.web.system.role.model.Role">
        update sys_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleSign != null">
                role_sign = #{roleSign,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.building.ipi.web.system.role.model.Role">
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_sign = #{roleSign,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <!-- 通过用户id 查询用户 拥有的角色 -->
    <select id="selectRolesByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
      SELECT r.* FROM sys_role r LEFT JOIN sys_user_role ur ON r.id = ur.role_id
      WHERE ur.user_id = #{id,jdbcType=VARCHAR}
    </select>

    <!-- 查询角色列表 分页查询 -->
    <select id="selectPageList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM sys_role order by id
    </select>

    <!-- 查询权限树 -->
    <select id="getPermissionTree" resultType="com.building.ipi.web.common.TreeModel">
        select p.id,p.pid as pId,p.permission_name name,(case when s.id is null then 'false' else 'true' end) checked
        from sys_permission p
        inner join sys_role_permission r on(p.id=r.permission_id and r.role_id=#{userRoleId,jdbcType=VARCHAR})
        left join sys_role_permission s on(p.id=s.permission_id and s.role_id=#{id,jdbcType=VARCHAR})
        where <![CDATA[ p.`level` < 2 ]]>
        order by p.sort_no
    </select>
    <!-- 查询权限树 -->
    <select id="getPermissionTree2" resultType="com.building.ipi.web.common.TreeModel">
        select p.id,p.pid as pId,p.permission_name name,(case when s.id is null then 'false' else 'true' end) checked
        from sys_permission p left join sys_role_permission s on(p.id=s.permission_id and s.role_id=#{id,jdbcType=VARCHAR})
        where <![CDATA[ p.`level` < 2 ]]>
        order by p.sort_no
    </select>

    <!-- 删除角色权限  赋权用-->
    <delete id="deletePermission" parameterType="java.lang.String">
        delete from sys_role_permission where role_id = #{id,jdbcType=VARCHAR}
    </delete>
    <!-- 保存角色权限  赋权用-->
    <insert id="setPermission" parameterType="java.util.List">
        insert into sys_role_permission(role_id, permission_id)
        <foreach collection="list" item="list" index="index" separator="union all">
            select #{list.roleId},#{list.permissionId} from dual
        </foreach>
    </insert>
    <insert id="setPermission2" parameterType="java.util.List">
        insert into sys_role_permission(role_id, permission_id)
        select #{roleId},s.id from sys_permission s where s.`level`='2' and s.pid in
        <foreach collection="list" item="list" open="(" close=")" separator=",">
            #{list.permissionId}
        </foreach>
    </insert>
</mapper>